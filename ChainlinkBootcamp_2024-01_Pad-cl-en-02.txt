Chainlink Bootcamp by Solange Gueiros
Jan/2024
Session 02

https://pad.riseup.net/p/cl-en-02

https://www.youtube.com/@chainlink

Slides
https://docs.google.com/presentation/d/e/2PACX-1vRQ5ssT21p2lr6vFgxD5_JUp3ZXePsjxVsi56ljD_UUbT2b5COSXXhDE0CsBjMBRPkVH9yofNUsvz-X/pub?start=false&loop=false&delayms=3000

Chainlink Bootcamp 2024 Tasks
https://forms.gle/YYUx3ErX1LwCqDBPA

Name - City, Country
Harsh Mittal, INDIA
Sol - Sao Paulo, Brazil
Anil Kushwaha - Delhi, India
Jose Morillo- Valencia, Venezuela
lokinagure, Hyderabad India
Colin -Ireland
Uthman Yaro - Lagos, Nigeria
Victor - France
Batuhan Taş- Türkiye
Jeff - Houston, TX US
Danki - Baguio, Philippines
Sarthak Rawat - India
Marco - Denver USA
Arthur London, Uk
Gordon - London, UK
Lindsay - Valencia, Spain
Mac - Phurnace, AZ USA
koxy - Nigeria
Michal - Prague, Czech Republic
Okeke Christian - Nigeria
Daniel Y - Toronto, Canada
Brian - Switzerland
Simona Miani - Rome, Italy
Akhil - India
AzraiHasan - KL, Malaysia
muazam - Islamabad, pakistan
Amit-India 
Pratik- Pune 
Emmanuel Haggai - Nairobi, Kenya
Gabriel Thome - Brasil https://www.linkedin.com/in/gabrieltome/
Parnian Yousefi Sabet - Tehran, Iran
Augustin from Geneva Switzerland
Harsh  - patna , India 
Priyanshu - India
Andy - Miami, USA
Ashok Raj - Cambridge, UK
Supreme Bhandari - Kathmandu, Nepal
Ishant  - India
Thomas - Madison USA
Andre- Santa Barbara, CA,USA
Romain-Pierre - Amsterdam, The Netherlands
Emmanuel Effiong - Nigeria
Andre - Zebbug, Malta
Yan Chigintsev - Brooklyn, NY, USA
Brett S. - Boston MA, USA
Stella - Greece
Brandon - U.S.A
Andrew Kim - Nairobi, Kenya (East Africa)
Lukas - Innsbruck, Austria
Araceli - Guanajuato, México
Mitu - Delhi, India
Seppo -Helsinki, Finland
Maciej - Imielin, Poland
Bogdan - Serbia
Konstantinos - Greece
Eder Rodrigues - Campinas, Brazil
Uzair ahmad - India
Raman - Minsk, Belarus
Liam - Rio de Janeiro, Brazil
Ingrid - London, UK
Joe - London
Tebbo - UK
João - Óbidos, Portugal
Peter Jackson - Timbuktu, Mali
Jan Röschl,Lucerne, Switzerland
Tianchi - Toronto
La Toya- Texas, USA 
Mike E - CA, USA
Vis - London, UK
Austin B- Arkansas, USA
Brandyn - Panama City, Panama
Brent C-Chillicothe, USA
Sylvia – Berlin, Germany
Sama ER - DC, USA
Chiara M - New jersey, usa
Dinesh - Madurai, India
Jack Harding - London, UK
Joel-Madrid Spain
Shane - FL, USA
Stefanie - Attersee, Austria
Adam M - Michigan, USA
Alex C - Indiana, USA
muazam -
Cecilia-Nairobi,Kenya
Minh Vu - Hanoi, Vietnam
Eric Atlanta, Georgia, USA
Arson Tomanta, Jakarta, Indonesia
Rama - Chaco, Argentina
Daniel S - Barcelona
Jeff C - Naples, FL USA
Erfan - Toronto, Canada
Tomas - Brno, CZ
Princewill Iwuorie , Lagos, Nigeira
Raad - Dhaka,Bangladesh
Eneko - Logroño, Spain 
Rafat - India
Vandana - mississauga, canada - 0xc7f874dad071deec2Eb8c4D9C9e7133094E7976E
Peter - Lagos Nigeria 
Khaled Fouad - Munich, Germany
Nawodya - Sri Lanka
Alex B - Indiana - USA
Thomas Hall - Day 2 12/9/2024 - California USA
Gogo Ibimina Felix - Nigeria
Alex Cook, Ukraine
Teodor - Bratislava, Slovakia
Kyle Varga - Texas USA - 0xAb51B29f705360cbfC84a8A831dbAadB965c260F
Ravinder Kinnera - Bogotá, Colombia
Zarko Jevtic - Nis, Serbia
farhan VA USA
Vinh - HCM, VN
Jonathan - Oslo, Norway
Nick ATL
Marina Wentzel - Basel, Switzerland
Daniel Benitez - 
Fredrik Carlsson - Malmö, Sweden
André Gattini - São Paulo,Brasil
Skandha Roshan-Tamil Nadu,India
Ashutosh - Nepal
 Nimnath, Colombo
Naman, India
Paul - Lagos, Nigeria 
Hemanshu Mahajan - Pune, Bharat(India)
Craig Parker CO USA
Sambit Das- Bangalore India
Sade C- Atlanta Ga
Pablo Brandenburg - Arizona USA
Raafayasif -Karachi-Pakistan
Akil - Toronto, Canada
Iddhie - Colombo, Sri Lanka
 Kelly Egode - Belfast UK
 David - Nigeria
Emmanuel Constant - New Jersey - USA 
Nidhi India 
Saurabh  -- India
Mayur-India
Michelle Breaux - New Orleans, LA
Bidyadhar-odisha,INDIA
D Marl - Yogya, INDONESIA 
Marco Manzi - Rome, Italia
Ahmed Amine Gargoura - Munich, Germany
Sunil- India
Duda - Prague, Czechia
John-Mac NYC
Terrance HCMC, Vietnam
Sanjayshanmugam sk - TamilNadu,India
Michael - Borken, Germany
Khalid - Ireland
Essam - Baghdad, Iraq
Jad Kachmar - Toronto, Canada
Leon - Cayman Islands
John Cramer - Longs Island,NY USA
Desmond W - Tulsa, OK
Tippi Fifestarr - Chicago, IL USA
Jimoh Lukman -Lagos,
adam williams swansea wales/uk
yannick, Marseille - France
W. Ryan O'Sullivan - Columbia, MO, USA
Stewart - New York, USA
Andrew - Los Angeles, USA
JL - HK, China
Oliver Inzunza - Coachella Valley, CA,USA
Luis - Zurich, CH
Richard Eze - Nigeria
Tameka Lawrence - Ontario, Canada
Sunday Justice - Nigeria
Pablo Padillo - Miami 
Josh Banks - Lancaster, UK
Leo Nwafor - Nigeria
elyas - mashhad- Iran
Mohammed Murtala Umar-Nigeria
Newton Sila- Kenya
Andrea Marchini - Rome, Italy
Inna - Tsilisi, Georgia
Kunal - Mumbai, India
Yann - Marseille, France
Melissa - Barcelona, Spain
Katya - Kyiv, Ukraine
Kakooza Vianey - Kampala, Uganda
Aminu Ismail Abbas , Lagos Nigeria
Dike - Lagos, Nigeria
180. Olerato - Johannesburg, South Africa
190. Ivanka - Kyiv, Ukraine 
191. Ohmarkely Ambrosio - Singapore
******************************

https://remix.ethereum.org/

Icon 4 - SOLIDITY COMPILER
Enable Auto compile


Icon 5 - DEPLOY & RUN TRANSACTIONS
ENVIRONMENT
Injected provider - Metamask

Check the Sepolia (11155111) network

https://sepolia-faucet.pk910.de/
https://sepoliafaucet.com/
060606
Icon 2 - FILE EXPLORER

Create file
Register.sol

Copy between Begin and End

// Begin

// SPDX-License-Identifier: MIT
pragma solidity 0.8.21;

contract Register {
    string private info;
    
    function getInfo() public view returns (string memory) {
        return info;
    }

    function setInfo(string memory _info) public {
        info = _info;
    }
}

// End

Paste on Remix


Icon 4 - SOLIDITY COMPILER
Compilation Successfull

Icon 5 - DEPLOY & RUN TRANSACTIONS

Deploy

Go to Deployed Contracts

Copy the Register Address

Name - Register Address
Essam - 0xd9145CCE52D386f254917e481eB44e9943F39138
Victor - 0x478A9b7196860324f94CEFd678Eb667DED8f2916
Tianchi - 0xd9145CCE52D386f254917e481eB44e9943F39138
koxy - 0x9cC3cE5a02A03dB90B5414D4e546C6E14aA1b736
lokinagure - 0x49902f7fFDc199D17Edb216068BDaf0dB2Bb6BF0
Jose Morillo - 0xf2599a3931E777fd88583B1ED30b46007E7cb713
Marco - 0x3211474c0548F131991E4b8aF1fEa70434AA32F1
Gordon - 0xab91c3054A808DC0c894E4D8d62b01eAd1977566 
David - 0x22eBE8Fa12A396D4d48e5894516cf50ffD599f92
Igzacto - 0xe47Ae9eAEc5e82606e2862A09AFDcEd9B46a9A78
Uthman Yaro - 0x4ab4979a34FAec34593a6971A64a9D9A52aA0EB8
Lindsay - 0x7DDf785983C477775b46D2BB474219ab0A92DE2f
Sarthak rawat - 0x9e47eaa253bcaf422ce2bdb7ba45870430002f38
Etette - 0x6df56d0e5206bD12F6B2f19059aCD6923Aa47742
Brent-0x98dA20AbB33714e8445F1d506c06C492D5722833
Batuhan - 0xed92ab215dcb2eee2ec3da4996e0d51a0b53c2ed9b5c499b709cb552bfb6c54b
Augustin - 0x0f6abf2d70cf2e3518ce23676f1d7818368abcea34eac4906269810a7b7ce2c9
Sol - 0x5f91C2bD935208D67720F395857F8CeEA8E5c635
Lucas Carvalho - 0x0b606ab01C04930f79F951C75a7f2eD2639dd3F3
Tebbo - 0x4231Eb752CEb1e7Cd86a596a187e29e7a61a4a70
Vandana - 0xc7f874dad071deec2Eb8c4D9C9e7133094E7976E
Danki - 0xA1cd1bF39870cE0c5d25b1176E6938506C6CcB39
Parnian - 0x058c8aBC7682B8a2d7197DEb2C48b846aA9d20d8
Duda - 0x201e7B094f983E301462eaD677142338af970D48
Ashok Raj - 0x4aB05869004e067695dea64AAFC0315B4F7fcC1b
Maciej - 0x6FcD7B9014b4158C5259630CceF6B9da42e18D8d
Ishant - 0x2388C1850fEBeAd76D45D1c2c375E95dD9de147F
Andre - 0x687f70e54026904BD40554160ACc77dF7b29C49D
Brett - 0x903607c005192a97B5eDf3E136676606f641Df6C
Andrew Kim - 0x5bc103a9bC610a10ad5E036c5c8E3bf64D7d9Edb
Romain-Pierre - 0xEDcA944E4f3050e9613040ba7db01f8fEC06D04B
Jeffrey - 0xe33896da94D7db6Ce72f6bf45daAB2fDbE6A538D
Uzair - 0x1A4591dF76393c47BfA5727B7c1550875dA20222
Brandyn - 0xC99171B60A46C0247B4556d4eBfB259B645ccBB1
Bharat - 0x1ce7BbFa437727495710fF8350b398d9Bc8Ec30A
Harsh - 0x98B4D5A14F6c6a4A42E014fedc1aC57aa0f1c30e
Azmaeen - 0x07Eb8AEc3deE41EafdF0871277DD9f74476124fb
Seppo - 0x18ae1b3Bf1277dD253C1F74a8fA72c39F0Ee2624
Arthur-0x0968229e0B9f31BB81dC45DF24a2d619691e4c45
Brandon - 0x482674e40E284CC5a98F41511061F36023340b9f
Arson - 0x64f3fc5B4Feb990481819F486758B08a39f3E3B5
Liam - 0x52ac354B34584699525751ebDFCa3532A043F83C
Jan - 0x83dDfa63c089F3104F4ed12c94060E2731B69A3B
David - 0xB84d105ECCf929F5604384E63f3ebAFc7DAca327
Austin B - 0x810A60eDF3Bcb49f2b8Bdd4D6d0866eb850afBC2
Farakh - 0xE94Bc531f96b0d87417b4608fa6886741fE04B82
Sylvia – 0xAE4f78A1A9fBa985D3F09C69e4CA4186bAE6843c
Iddhie - 0xD0AAc7e92894Cb79720f77a43d406c0202B40CBA
Rama - 0x130A0B7086b0211459BD19F15b807b490B00A936
Raman - 0xc6962A2cc4217812E3CcD86C10605c18361857dA
Joel - 0x711A2E7A74fEeB74E13CF52413D5fa78C57ab194
Jordi - 0x8E172e1486338Af815D8Eb16de43D0Dc712AE5Bd
Nawodya - 0x9416938e09d5f6FaB81651DD46a8b3F72887ddb1
Fredrik - 0xa19c8d8b0bdea2c59b07d57ccbbc69e64ffcca27
Vis - 0x396E84fC7B1E18ED8fE570f2c1dBafd64bd3C183
Gabriel Thome - 0xAE1FFAb7495cB433D9300e21f02B1a7C5c943F03
Dinesh - 0x6408Ab68deaCE4C15Ab38A6b740ea26424d57bC4
Shane - 0x0Dfc65ca5F93d6b14A45031a1693926aA77cEea8
Sanjayshanmugam sk - 0xA1Fe9F5D5C08008fC7a0E381D0784698470682cc
Minh Vu - 0xd09F3D4A4155354BCDA06F1079d2702Bf6A828e0
Alex B. - 0x826F564280f68856C48ead8687eDa38C6D3654ed
0x85CD315d023F17a9C2d8eD53317a6f8e4a4acC6E Simon
Lennart - 0xE3ACAA0b0501c259fcdBBACdE134d5d6F0820758
Saurabh  contract address 0x3262c4b4ac3B23201a9dDa6913EeCba52B64305d
Andy - 0x8E8d0c5d32B4A01C5a6008e5A9382026aA67d418
Leon - 0x6FF5a1E6113B7490Bc4a4e031Ba67E897210D953
Supreme Bhandari- 0xeD437b748f1C97f305a2b56a6B5814f1654cAeD8
Daniel S - 0xb3bE4448E138DF663013F2A734C35Ee0b7D63A46
Rafat - 0x0fD55d06B382C72d8b95f5Bf9Ae1682D079B79bB
Tomas - 0x7C4b83ffea3b6c1468Ea4552cc074fE4bE4D24b4
Princewill Iwuorie - 0x3660f6F9bC15F1Ee48fa90E75099dEf0075A8Bec
Chiara M - 0x59AABAa3A9AEDf639496f55B298972D447937C36
André Gattini - 0x825576316E270Bef68EDA7A308dD7Dc6F0a15726
Bidyadhar-0x4F44fc2557026cA3246f9609868EE48c353D5a30
Nick - 0xFce64B975440eadf3740c8873F7Efe32D99Ad45c
Alex C - 0x6dF4A8e4D2eF7725FbD398cc7550d244E13Ffa68
Eneko - 0xEc3218d24C8b91100bF24cF7AFe5803397025243
Ravinder Kinnera - 0xD0019441Ab78aD38BFC253aEf1F06DD51ea8d100
Hemanshu - 0x5ad0A6F6dEa5140e91b625D1B97A32DF7be13a28
Craig -  0x3161f4aa6ee33951e5c547bc5d5d8724148da2e9
Marina Wentzel 0xb0456ed00a15e28ebec41bea019b4d8642e79d8b
Samyakt Patil - 0xE5D083269bcEa593a00dFD85bED94b179FEf6385
Ingrid -  0xf4837edF5E2C1Eb4bd5b2517ffAC9922aA91e194 
Tim - 0xbc29004f110fd5bc5a4ada687096214a0623d55f
dco - 0xF7203FDe9996FD49F7d128fAe0384Cfd584db1F1
Dj - 0xF89Cd490886F067bC7198dBF070b5513264467b5
Thomas Hall = 0x485F9e3e7639fB31a2BCe1Ab34e9325Ef34f9394
Phan Insy = 0xa5ECF451BDECcbf55B358D3f9C3432920e78907E
Stefanie - 0x2A0FFd798971607Ce3ddD0a7A11765289dC999f1
Jack Harding - 0x59AABAa3A9AEDf639496f55B298972D447937C36
AzraiHasan - 0xC36e772537FA1b30eC29a6632138D4e8ACC17038
Nimnath - 0x6d4Bc6260E2E623Bf277fd64b87a4A492b067dbf
Vinh - 0xfe02D0217dEe98407DD2CFDB62e5149dBC877d4f
John-Mac - 0x197756bDc63acaB4480D9374600b0faA0EED0B45
Simona Miani - 0xfD5aE5bc798c8103c98d0682E180cC806Af962eE
Sakar - 0x91C20721546e55a58BA1b8a3b82527d60517d4aa
Jeff C - 0x1496302CdA1aa6D33eBb98AD938dCA64Fd59aD4c
Sama ER - 0x9cd721fe3731E80CDcD1cC772B1Ff15A052a14eF
Filip - 0xA39Ace3A8F65399e53504B5ED0EDf7003674119b
NA - 0xB5762ae2B54A74f984bd8408d186E2169FD5937b
Michael - 0x941a6D032c8C5bC1c5080deE0E35f5543Ed07165
Surya - 0x23b3c908d5912a6835DD7BBaed606DF040e59F0E
Skandha Roshan - 0xB8830cD1d0fe97466c8f24D81272b80910124507
Cecilia-0x340cefbb91f55b315911d4209cc3214001ac98e6
John Cramer - 0xeb9e6f4664b2f03bb4d1931438510f7ee53073f2
farhan Nasir - 0x4d5E3E8d6182d7559eF6c4aE07529aae9c3edd61
Sade C-0x94cA2eFe57eabc3DAE4b556E07c60f78416DCC50
Tippi Fifestarr - 0xf0c8fd887247ddB7729D086aB2DA505122ddf480
JL - 0xa2294708d7da4dabdc0c1c75b69f4fa82d72a71b
Jad Kachmar - 0xFd7006b76D26CA5d0fE5C8E2d31b76A7CF542055
Adam M - 0xb97E4e42AF228f8947CAA664823Bdb819d60bFF0
farhan - 0x664E0b65FDe38571fAF8A7C141Aad999a7bC8711
Mike E - 0xFE691408bD8391B28769442CF77cF3B555C72D5A
John B - 0x5198AB92CBbEF8afb9c0E2638615C802bc3F5D97
Khalid H. - 0x8E56049cDDD558c7BCe4340a238D9047de472E8D
adam Williams -0x1803f8a5eE59e30942d461CEa0210832D9433a1b
Ryan O'Sullivan - 0x8AA494cF37736986957E5F2763C6f24adf003742
Lucas - 0xd9145CCE52D386f254917e481eB44e9943F39138
Konstantinos - 0x140aA0d1956099842784ffcAAaA390539DC0c42C
Erfan - 0x53E0bcCbaFa5425471F725B95fc840Ddf8749C49
Stewart - 0x4f0276EAEA2f933660891E791d8814ef703b5AA1
Oliver - 0xb55Be55C2a2BA738525377c49B60d4B697fA2C0F
Terrance Walker - 0xAF6C6c4407d26B90c4ffCdFC7360eA9a09e80AA2
Luis - 0xda86eF9173Df98ec3241dd15a54cF9e8864215f6
D Marl - 0xa3b2869665b3ce5D4570D7199154a68b6fcB39f8
Richard Eze - 0x63Fb1F81B986A7d313AAC2927794518941FB60C4
Tameka Lawrence - 0xbF66ABBFdb6554fe3E7C79c663A68b66C5FdAa16
Ananda - 0x9553Ea8B7718261e28E35F738769D4977B19CE38
Josh Banks - 0x6fee3ec499b8cbe8aee72fd0351404feb52a073d
elyas - 0x24a272a9064656F05B31Ce3Ee12F14013188e360
katya - 0xF6d9c368E5fF1e835C76329Fe4Dd348b384b592c
Elisabeth Green - 0x7F682080bf7BDCcb3114fBBA6A94C450d87fCe4E
Mohammed Umar - 0x3F09B6C3B96ED02005C3B77aC9296F2BA89Ded48
Inna - 0xebe9e9e57beffbfbecb6762a70b9112037e0b36b
Kunal - 0x8b5F86c9Be78b204B2a1c2E293F46f6A850fb5Fa
Yann - 0x9b593AcC85FB3EC75D22fcaFcbdA1Ec0Ec50a644
Melissa - 0xdF893242795986aDCeF2B325689e5de5eD9370Bd
Kakooza - 0xc1D0102C1a0fdd58de7A8b016199Bc1d90F5fa26
Katya - 0xBfd47F49a1C80Fb02028e956614a76dde5Ed5667
Dike - 0xd5f93953EbaE0aea706579E17F27fea0F24c6f05
Andrea Marchini - 0x78424f28aCcD330F0754927FA0CbbfC97ed4dba2
Ivanka - 0x0aC4D2050d1fd96457ba6870F2ECb0f9e561ddDA
Tolux - 0xb599D6fAAB1Ed313B2615B43306BB3Bb8728c9F6
frank - 0x75637A750E252A8cfa5859273E975C6be937ca22

Name - RegisterAccess address
Ishant - 0xB75aedC4f056BF7D464B53F07ff0f74acf8ddd6b
Victor - 0x64e14596Eb7E5c1563b3e21a69Aaa34078f52f41
Marco - 0xd84f93144FeABAAdaB1B4359a032eccA01D0C2a9
simona miani - 0x11cb37E5Be4c97CA57338d2Bf2E55d185E5b7bf6
Gordon - 0x2D5e786DeC150d5741b058f23FB194f9aD5CBF0F
Brent-0xE045654B8051725918BF2c6CCb6538882CbEA3C4
Arpit - 0x80Cd3270c3a7650f0220e789375e5759375F2e98
Duda - 0x2B595db0BA46707aDAc88E58CB124De4753Ee407
Sol - 0x5Ab341883BfF70D34dE6B105FB224D4CD8315C8F
Vandana - 0x9686f165cd53d7425d8e8c18113b79b1c72b7ba4
David - 0xdab34211411ef32C544d34f25024B51480A4c5d2
Thomas Hall - RegisterAccess.sol - 0xba7f3695f54adf2df7999b43dcbfaa9269f1df1e
Danki - 0x88B3921F5ceCDD192780f6F1c12961A8253Ce143
Batuhan - 0x7885e042d9ae636c2a62d4e20470893b2ea68314
Lindsay - 0x1299d1ba3e7313484442612a51ef55c0c799ca148f62a1826cd26ee654d557a2
Stefanie - 0x02821D4aE164bAC0768E288a237CC89119888DD1
Brandon - 0x7b157c3ab4a792842c16385fa47437219bc0ead1
Andre - 0x6836A03EE8Dfc6b64C979c3aca005cE33f159777
igzacto  - 0x4E03D677D6F813A5DbE7d5ABcE3c7733af812ff6
Augustin - 0x7fc00C2946Fb7f43a5CFfCDc91Cc36B51CA2b976
Maciej - 0x34781c302baaaCe7a4BdAC16C80D1f2f1327d29C
Parnian - 0x8d0E490d2082421b61C95Ab424674305dC51b8b
Jeffrey 0x5f91C2bD935208D67720F395857F8CeEA8E5c635
Romain-Pierre - 0xf94D04800B6642846C99e30e6f9a4798A8080b84
Jeff C - 0x0939eBb1741c53aF547690fEde6890f79E84E4f8
Raman - 0xf2d1E8Bf917543a1ddD76ae9E526aa6346E70381
Sarthak Rawat - 0x053f8c6dff8d3076db2eb77b3c27b514a4ab72be
Sylvia – 0xa89E4E0d79039a938E9C73A2a9A990D8C1212980
Tianchi - 0xcdc8e1E605f6F84c916aa2A851ab86677cF01A9B
Tebbo  - 0xf567a64C50B3cf6Cb167edf130FD41aC0C871b8e
AzraiHasan - 0xe1b2c8825bd187D3574D391726d30C0be8e4163F
David - 0x2d87b4cb1ee7153aa7e9a9ad6673217169dc4de4
Arson - 0x40ee7059DbACBBa9403b21D54FFbeF08A501bE27
Shane - 0x16bEa1598DB5FE55d4b2e735136273079C34adaA
Arthur- 0xFfffD6367614f92E7339189609157838B6dD794c
Ingrid - 0xf4837edF5E2C1Eb4bd5b2517ffAC9922aA91e194
Chiara - 0x9a3591Be30358Eb08CE7f95963bb8FB8599C5C8C
Marina Wentzel - 0x818C78d3cBcCC9106fEf2dDC42dA1bc4c9b1F373
Supreme Bhandari - 0xC9eD03aFc4D8F5dfD726028F1Cb9BD2C1b5F4400
Nawodya - 0x33C6a1bA07046f8731D50a22C2dF92114570Cc39
Joel- 0x7aAB13481CcD5F0b92F84F747D34DC19F8b8d762
Kyle Varga - 0x60951cBa1dBb21Dd780E0f6C3d5fBAFa3d1adB12
Vis - 0x40bBCD93821E1c56A38fc890465fB09Fb09465eb
Andrew Kim - 0x4748463da5dda1c067834b94f7c19756da6d80ed814d896c9a5862c76a457684
Brett - 0x903607c005192a97B5eDf3E136676606f641Df6C
Ashok - 0xd71722604c2949eed2a785602a36f6af4d344c53
Jordi - 0x2c7A47aB154AFA61c9a1e5Bd4ab7630f00cC7aa8
Jan - 0x8bc315d11ff0711834e2af4e6b69354eb1e47e01
Harsh - 0x6e30386d4Eb217CD5bdcDF1b54cf354D0284946C
felipe- 0x44576677eD2B352c9C297aeBF58880d9E30Eb31C
Tim - 0x38A03586E87d342Cc0607F93578db20a18C76098
Iddhie - 0x37f3CD11b34130aaDC21F0a2596b5B07040eD54c
John-Mac - 0x8F4DeD68040a0694afA1c4aa34208C0069F46376
Konstantinos - 0xfd0700f6b25f6b90a3e036e1732faefe5275e63d95910ff06eb44c59498aa52f
Tomas - 0x3fC8a619b9031F99D8262D2C00DC3108A0fe379e
Hemanshu - 0xd134fBBb22642ea422410697731510874Be378b4
Lennart - 0x6ec54424a49a74aac462781d650745b5997d4693
Daniel S - 0xF081F4A0b45ae92DC321773DdA4d22858B4795Ad
Daniel:0xd5365332057467a1d7342fc3765afaa53aaa14cb
Fredrik: 0xfb97c22148b6ac49cb97b301798a33e59695de02
Leon - 0x9F9532B99857c555b02bD6d2BB00a38067E2dc85
Minh Vu - 0x75586a1637783e300a91ced4c35c88ea1d0d21e4
Seppo - 0x60E41DbF799014771C5FAD188d41f065d42E6F3D
Dj - 0x57f8C6235964f671C68E4C84b8fAEA07d9BdF6D8
Rama - 0xD9233ae33f3061f071b80D8A429E3A653B396cD7
Nimnath 0x5137ba275F75ceb70E0289AE25954E3Cd1Fe5405
Liam - 0x6d794fb1bbfde1a1d68ccedfaa021c449685ea328093bf645ff29255c0c5fe2b
Daniel Y: 0xd1d3b2ebe771bc17c19707fd5de1ce1c7e3f4702
Dinesh - 0x61c7d601BDf54fb959e0127D46B0872C493788Ba
Alex B. - 0x2714A662823F894327658B909e6F03FF58804404
Princewill Iwuorie - 0x3bB7AB8FEd9E9A03DA4CA8cEEBa156f3eA871138
Alex C - 0x8124e504dBD3f0cF0ff940656Af0cA0B88cd32b5
Andy - 0xD2Dc2d6854c9F83dcE4EE08632400CE3152681dd
bidyadhar-0xE5c526712e63146e85BDDa67a13217F546b43b20
Azmaeen - 0xEdaC00437F4c03A606bC1A3FF8acB51ab02BAFff
Sanjayshanmugam sk -  0x0f0fd4d930c80969f3cf0022687678ed989b6a59
John Cramer - 0x4259b7be7fa58d77460441c1e58b47ee66aade00
Rafat - 0x1823e9b9b2ed47243adb66dc49570eed4b5748c5
Vinh - 0xdd1d73418e1a503173831aac573bf821d68976ba
Heinz - 0x865653d001d68747d2Ee66291085c690bB44d73A
Travis - 0xeFf90B14351B3E400Ba0ee20fd4706c3FF7cd055
Craig - 0xbd9edBBF427c8e0D863F59127af9A7fC13Df20EF
Sama - 0x4a0e466a9fD95CFed1B545d826857534E4917f24
Ravinder Kinnera - 0x9E23d7f22f82157235812D1af151427FF37a3155
Adam M - 0xd817aC0085D1cE3753A47eb44158aC2f6C31bE07
Adam Williams - 0xe779dc69be41bcce86e5b95d51e8b0af071e7e77
Khalid H. - 0x01F085C88291F0ed69486A50157f2a030a230e02 
JL - 0x5e422f6F3bf11AF1C36c3860f1bDcf31328f8474
Oliver -0x509F1DaC8F896FB5f56Dd879c57C8da7201Ec875
Tameka Lawrence - 0xF884BE6E5BBc5b8B1743Dd3385390068Ed2112CD
Erfan - 0x8F8646774272CbcF27Ed923BE4144ce708Efca01
Jad - 0x98A0DE2bD07317e3c331ad322695157c3eAE5ffc
Ryan O'Sullivan - 0x7208EA9a0099a0b6d93C56B5b4CD135E42cBbDe6
elyas - 0x073e739c1ED28dCA79884058321C308478706f7C
katya - 0xAA767779dEa5C2f0CE51B88de9D5a26e1C59Eb00
Elisabeth Green - 0x324Bd98003cFD5134971ecaDD426EcAe9907501C
Mohammed Umar - 0xac9daA504e66f165febf66E9cDdA9FA5cD59599F
Inna - 0x5ba55afe677b5adb5af684c8e87645e00f2efd2a
Kunal - 0x12D6678eD606514d575336BBfb7257034ddAb5cf
Yann - 0x17cf49c969a37843150Bf2494917E59AFe148A27
Kakooza - 0x72e03fD10c6722c7e2E91e36E941AB6c0cC7FC51
Katya - 0xcf3F5aBA0DD36Af6356165DaCa0F1473F524D905
Aminu, Ismail Abbas , Lagos Nigeria
Dike - 0xc46e781581B625396995343892C31BB2B9c25280
Andrea Marchini - 0xEA32Bf2350E70E17Bb5caa794D29f189B64d8dE1
Lucas - 0x6198E93b11fc9A9aa937fEe0f3690e2Ec6578814
Tolux - 0xaC5cf0E33705d74C199B9079d205e1E95b8395cE




Who would like to update my info?
Romain-Pierre: 0xD2d6b8c336B3E14D2F631352FFb459DAB72571d6
Ashok Wallet - 0xaE47329A0742C3a784eAac8E9B57C1C9C3108bd6
Sylvia – 0xE1423BB89B5780C6c0F4d7126616Fbe48719230A
Parnian - 0xeaC4851342433c6B41202B0A09A66185B374DfC0
What's your contract address?
Sol contract 0x5Ab341883BfF70D34dE6B105FB224D4CD8315C8F
igzacto - 0x4E03D677D6F813A5DbE7d5ABcE3c7733af812ff6
Ashok Contract - 0xd71722604c2949eed2a785602a36f6af4d344c53
David - 0xc02B0DfD9037BDA377eE3DC9789f406a4C6A9479
Cecili-0x863aa20a30e9803af00d0709bd388b4bee03cc5a
Augustin - 0x7fc00C2946Fb7f43a5CFfCDc91Cc36B51CA2b976
Nick - 0x0189a4c902021820210eEbd0095c6319a8DA98ED 
Batuhan- 0x253410d92eF0c3775eCb62d0eE48db2701A56fD0
AnotherNick - 0xc4a3881c5C4232DA0593538EF8788f80fDcF810f
farhan - 0x3A555039a750948F7e7D43E585fCd2b3eB769267
Ivan Lautaro - 0x0c2C4aB9264096Bf0D23F35efeEb6fCff773e5ea
Terrance - 0x011EC44779b7FB289073cB7811E6097359bab447
JL - 0xa2294708d7da4dabdc0c1c75b69f4fa82d72a71b
Melissa - 0xDb6191B2F12A612b4d944bd0552EeC5855D87A3f


Arthur- contract I allowed you Sol 0xFfffD6367614f92E7339189609157838B6dD794c my remix not responding
Sol Address - 0x8F5F8E55b19A8674E22C8764E5A82A6323B25E1d

Me Batuhan,I added you Sol : Contract 0x7885e042d9ae636c2a62d4e20470893b2ea68314
I added you sol : Contract: 0xC9eD03aFc4D8F5dfD726028F1Cb9BD2C1b5F4400
Please add me Filip: 0xeD8EEd77847bcAe613E10CB148e3275c2148f46e its my wallet adress
or my contract adress: 0x286CadA0F5B69baeC6355C79c80a6E647B36c1CB > added in contract:0x34781c302baaaCe7a4BdAC16C80D1f2f1327d29C
    
Gabriel Added Sol =) -> Contract: 0x9fbA3b63E87E97c6Fcd38662fdc77C49c8e04fDc

I also added you, Sol 0xa89E4E0d79039a938E9C73A2a9A990D8C1212980 (Sylvia)

Hemanshu - 0xd134fBBb22642ea422410697731510874Be378b4 --> I Added you Sol
Someone can add me 0xd1DcBA15232606b9E90222160da2e5A3fa19DBDf - let me know your address I added you, this is contract:0xC9eD03aFc4D8F5dfD726028F1Cb9BD2C1b5F4400
Added you. Added you too ( contract: 0xdab34211411ef32C544d34f25024B51480A4c5d2)
this is John I Added you too (0x38A03586E87d342Cc0607F93578db20a18C76098 )

Added you mine is (0x83E048fE9699C3d9a81ba9217Ccd064d148cE2A9)

Added you (to my contract 0xD9233ae33f3061f071b80D8A429E3A653B396cD7) - Rama
Augustin - I added you: 0xc9895Aeca29eF20C29b70099036df3Eca452Ff89
Sorry everyone.  this is my wallet address. i pasted contract address instead
HEre is my wallet address 0xd1DcBA15232606b9E90222160da2e5A3fa19DBDf
@Eik added you 0xf567a64C50B3cf6Cb167edf130FD41aC0C871b8e
try this sol  0xf567a64C50B3cf6Cb167edf130FD41aC0C871b8e

Maciej here, added Arthur address 0x0D9F5918f9050E93900B6B3BDC9282030ee64B8f in contract 0x34781c302baaaCe7a4BdAC16C80D1f2f1327d29C


simona miani - Sol I added your contract

Parnian - Added you: 0x8d0E490d2082421b61C95Ab424674305dC51b8bb

Alex - Sol, I added you to 0x8124e504dBD3f0cF0ff940656Af0cA0B88cd32b5
Arthur- My remix broke
D Marl - 0x30aB5fc298292477c3A84A88735E78cBE6f0f0F0

Try my Sol u a member. my contract : Raman - 0xf2d1E8Bf917543a1ddD76ae9E526aa6346E70381
***********************************
https://github.com/solangegueiros/register-learn-solidity


If anyone wants to practice this after class, let me know.  message me on discord channel for Chainlink - Vandana. discord:  .vandana add me too hashuzair

instagram : @igzacto

I am getting an error when I try to setInfo with index bigger than 3. Can anyone please answer me? 
>> index start at 0. So if you have 3 Info elements, the last element has index 2 (not 3)

Yes, I have three elements, 0, 1, 2. Now I want to add one more to it. It is the element index 3 and "Hello 3," but setInfo gives me an error. 



Learn about solidity and ethereum @ https://speedrungolf.vercel.app/ 

Manu - Does anyone have the code for the RegisterAccess.sol smartcontract ? Looks like someone cut it off from above...

likewise, me!!!🤧🤧

Hi Manu, here you are
//BEGIN

// SPDX-License-Identifier: MIT
pragma solidity 0.8.21;
 
contract RegisterAccess {
    string[] private info;
    address public owner;
    mapping (address => bool) public allowlist; 
 
    constructor() {
        owner = msg.sender;
        allowlist[msg.sender] = true;
    } 
 
    event InfoChange(string oldInfo, string newInfo); 
 
    modifier onlyOwner {
        require(msg.sender == owner,"Only owner");
        _;
    } 
 
    modifier onlyAllowlist {
        require(allowlist[msg.sender] == true, "Only allowlist");
        _;
    } 
 
    function getInfo(uint index) public view returns (string memory) {
        return info[index];
    }
 
    function setInfo(uint index, string memory _info) public onlyAllowlist {
        emit InfoChange (info[index], _info);
        info[index] = _info;
    }
 
    function addInfo(string memory _info) public onlyAllowlist returns (uint index) {
        info.push (_info);
        index = info.length -1;
    }
   
    function listInfo() public view returns (string[] memory) {
        return info;
    }
 
    function addMember (address _member) public onlyOwner {        
        allowlist[_member] = true;
    }
 
    function delMember (address _member) public onlyOwner {
        allowlist[_member] = false;
    }    
}


//END

Manu - Thanks a million for this!!


Docs - Chainlink Market and Data Feeds
https://docs.chain.link/docs/using-chainlink-reference-contracts

Chainlink Data Feeds Contract Address
https://docs.chain.link/docs/reference-contracts

https://docs.chain.link/data-feeds/price-feeds/addresses?network=ethereum&page=1#sepolia-testnet


special function
receive() external payable {









































